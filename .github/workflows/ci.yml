name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install ".[dev]"
      - name: Run pytest
        run: pytest

  frontend:
    name: Frontend Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build

  deploy:
    name: Trigger Deployments
    needs:
      - backend
      - frontend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      VERCEL_DEPLOY_HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK }}
      RAILWAY_DEPLOY_HOOK: ${{ secrets.RAILWAY_DEPLOY_HOOK }}
      RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
      PRODUCTION_DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
      GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
      MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN }}
      SKYSCANNER_API_KEY: ${{ secrets.SKYSCANNER_API_KEY }}
      BOOKING_COM_AFFILIATE_ID: ${{ secrets.BOOKING_COM_AFFILIATE_ID }}
      AGODA_API_KEY: ${{ secrets.AGODA_API_KEY }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
      ALLOWED_ORIGINS: https://traveltailor.vercel.app
      SESSION_COOKIE_DOMAIN: traveltailor.vercel.app
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Trigger Vercel deployment
        if: env.VERCEL_DEPLOY_HOOK != ''
        run: curl -X POST -d '{}' "$VERCEL_DEPLOY_HOOK"
      - name: Trigger Railway deployment
        if: env.RAILWAY_DEPLOY_HOOK != ''
        run: curl -X POST "$RAILWAY_DEPLOY_HOOK"
      - name: Trigger Render deployment
        if: env.RENDER_DEPLOY_HOOK != ''
        run: curl -X POST "$RENDER_DEPLOY_HOOK"
      - name: Set up Python
        if: env.PRODUCTION_DATABASE_URL != ''
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install backend dependencies
        if: env.PRODUCTION_DATABASE_URL != ''
        working-directory: backend
        run: |
          pip install --upgrade pip
          pip install .
      - name: Run production migrations
        if: env.PRODUCTION_DATABASE_URL != ''
        env:
          DATABASE_URL: ${{ env.PRODUCTION_DATABASE_URL }}
        working-directory: backend
        run: python scripts/run_migrations.py
